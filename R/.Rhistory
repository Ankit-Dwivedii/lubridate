as.POSIXct(part)
class(part)
class(secs)
as.numeric(part)
e3 -as.numeric(part)
z
"-.POSIXt" <- function(e1, e2){#
	if (inherits(e2, "period")){#
		if (e2 %% floor(e2) == 0){ #whole periods#
			seq(e1, by = "-1 month", length.out = e2 + 1)[e2 + 1]#
			} else { # partial periods#
				#
				# length in seconds of the last period#
				secs <- as.double(difftime(e1 - floor(e2), e1 - ceiling(e2), units = "secs"))#
				#
				# length in seconds of the partial period#
				part <- as.numeric(e2 %% floor(e2) * secs)#
				e1 - floor(e2) - part#
				}#
		} else {#
			base::'-.POSIXt'(e1, e2)#
			}#
	}
z - 2.5 * m
z - 2 * m
z - 3 * m
years <- function(x = 1) {#
	per <- x * 12#
	class(per) <- "period"#
	per#
	}
y <- years(1)
z - y
z- 2.5 * y
z- 2.1 * y
"+.POSIXt" <- function(e1, e2){#
	if (inherits(e2, "period")){#
		if (e2 %% floor(e2) == 0){ #whole periods#
			seq(e1, by = "month", length.out = e2 + 1)[e2 + 1]#
			} else { # partial periods#
				#
				# length in seconds of the last period#
				secs <- as.double(difftime(e1 + ceiling(e2), e1 + floor(e2), units = "secs"))#
				#
				# length in seconds of the partial period#
				part <- as.numeric(e2 %% floor(e2) * secs)#
				e1 + floor(e2) + part#
				}#
		} else {#
			base::'+.POSIXt'(e1, e2)#
			}#
	}
z
z + m
z + 2.5 * m
z + 2.5 * y
z + 2.1 * y
z + 2.1 * y + 2.5 *m
z + d
z + 2.5 * d
seconds <- function(x = 1) {#
	dur <- x * 1#
	class(dur) <- "duration"#
	dur#
	}
z + seconds(2.5)
2009-06-14 + months(2.5) + years(1.1)
as.POSIXct(2009-06-14)
strptime(2009-06-14)
strptime(2009-06-14, "%Y - %m - %d")
strptime(2009-06-14, "%y - %m - %d")
?strptime
strptime(2009-06-14, "%y-%m-%d")
strptime(2009-06-14, "%Y-%m-%d")
strptime("2009-06-14", "%Y-%m-%d")
strptime("2009-06-14", "%Y-%m-%d") + months(2.5) + years(1.1)
?strptime
z
z <- Sys.time()
z
source("accessors.r")
month(z)
month<- function (x, value){#
	a2 <- -(month(x) - value)#
	if (a2 == 0){#
		return(x)#
	} else if (a2 > 0){#
		month_seq <- seq(x, by = "month", length.out = a2 + 1)#
	} else { # adding negative months (subtracting)#
		a2 <- abs(a2)#
		month_seq <- seq(x, by = "-1 month", length.out = a2 + 1)#
	}#
	# partial months#
	secs <- as.double(difftime(month_seq[ceiling(a2) + 1], #
		month_seq[floor(a2) + 1], units = "secs"))#
	part <- a2 %% trunc(a2) * secs#
	#
	month_seq[a2 + 1] + part#
			}#
	}
'month<-'(z,7)
'month<-'(z,8)
'month<-'(z,8.5)
'month<-'
'month<-'()
month<-()
month<- function (x, value){#
	a2 <- -(month(x) - value)#
	if (a2 == 0){#
		return(x)#
	} else if (a2 > 0){#
		month_seq <- seq(x, by = "month", length.out = a2 + 1)#
	} else { # adding negative months (subtracting)#
		a2 <- abs(a2)#
		month_seq <- seq(x, by = "-1 month", length.out = a2 + 1)#
	}#
	# partial months#
	secs <- as.double(difftime(month_seq[ceiling(a2) + 1], #
		month_seq[floor(a2) + 1], units = "secs"))#
	part <- a2 %% trunc(a2) * secs#
	#
	month_seq[a2 + 1] + part#
}
'month<-'(z,8.5)
"month<-" <- function (x, value){#
	a2 <- -(month(x) - value)#
	if (a2 == 0){#
		return(x)#
	} else if (a2 > 0){#
		month_seq <- seq(x, by = "month", length.out = a2 + 1)#
	} else { # adding negative months (subtracting)#
		a2 <- abs(a2)#
		month_seq <- seq(x, by = "-1 month", length.out = a2 + 1)#
	}#
	# partial months#
	secs <- as.double(difftime(month_seq[ceiling(a2) + 1], #
		month_seq[floor(a2) + 1], units = "secs"))#
	part <- a2 %% trunc(a2) * secs#
	#
	month_seq[a2 + 1] + part#
}
'month<-'(z,8.5)
x <- z
value <- 8.5
	a2 <- -(month(x) - value)
month(x)
as.POSIXlt(x)
as.POSIXlt(x)$month
as.POSIXlt(x)$mon
as.POSIXlt(x)$mon + 1
month(x)
month()
month
month <- function(x) as.POSIXlt(x)$mon + 1
month(x)
'month<-'(z,8.5)
z
'month<-'(z,-8.5)
'month<-'(z,-.5)
'month<-'(z,0)
'month<-'(z,1)
seconds <- function(x = 1) new_duration(x, 0)
seconds(1)
new_duration <- function (seconds, months){#
	structure(data.frame(seconds, months), class = "duration")#
}
seconds(1)
minutes <- function(x = 1) seconds(x * 60)
minutes(1)
months <- function(x = 1) new_duration(0, x)
months
months()
'+.POSIXt' <- function(e1, e2){#
     second(e1) <- second(e1) + e2$seconds#
     months(e1) <- months(e1) + e2$ months#
}
seconds() + months()
a <- new_duration(60*60*24+61, 1)
a
z + a
'+.POSIXt' <- function(e1, e2){#
     second(e1) <- second(e1) + e2$seconds#
     month(e1) <- months(e1) + e2$ months#
}
z + a
e1 <- z
e2 <- a
month(z)
e2$months
class(e2$months)
class(month(z))
'+.POSIXt' <- function(e1, e2){#
     second(e1) <- second(e1) + e2$seconds#
     month(e1) <- months(e1) + e2$months#
     e1#
}
z + a
months(e1)
'+.POSIXt' <- function(e1, e2){#
     second(e1) <- second(e1) + e2$seconds#
     month(e1) <- month(e1) + e2$months#
     e1#
}
z + a
class(e2)
str(e2)
e2$seconds
a
# adding #
'+.POSIXt' <- function(e1, e2){#
     second(e1) <- second(e1) + e2[1]#
     month(e1) <- month(e1) + e2[2]#
     e1#
}
z + a
seconds_add <- function(e1, e2){#
	second(e1) <- second(e1) + e2$seconds#
	e1 	#
	}
seconds_add(z,a)
second(e1) <- second(e1) + e2$seconds#
	e1
z
seconds_add <- function(e1, e2){#
	second(e1) <- second(e1) + e2$seconds#
	e1 	#
}#
# or#
# seconds_add <- function(e1, e2) e1 + e2$seconds#
#
#
months_add <- function(e1, e2){#
	month(e1) <- month(e1) + e2$months#
	e1#
}
class(e2$seconds)
class(e1)
class(month(e1))
'+.POSIXt' <- function (e1,e2){#
	e3 <- seconds_add(e1,e2)#
	months_add(e3,e2)#
}
z + a
seconds_add(z,a)
'+.POSIXt' <- function (e1,e2){#
	seconds_add(e1,e2)#
}
z + a
z
'+.POSIXt' <- function (e1,e2){#
	e3 <- seconds_add(e1,e2)#
	e3#
}
z + a
class(z + a)
month_add(z + a, a)
months_add(z + a, a)
recover()
months_add(z + a, a)
recover()
e1
e2
e1 <- z
month(e1) + e2$months
class(month(e1) + e2$months)
month(e1) <- 7
'month<-'(e1,7)
recover()
traceback()
try(gsub("\\s+", " ", paste(capture.output(print(args(traceback)))
)
)
)
'month<-'(e1,7)
traceback()
"month<-" <- function (x, value){#
	a2 <- -(month(x) - value)#
	if (a2 == 0){#
		return(x)#
	} else if (a2 > 0){#
		month_seq <- seq(x, by = "month", length.out = a2 + 1)#
	} else { # adding negative months (subtracting)#
		a2 <- abs(a2)#
		month_seq <- seq(x, by = "-1 month", length.out = a2 + 1)#
	}#
	# partial months#
	secs <- as.double(difftime(month_seq[ceiling(a2) + 1], #
		month_seq[floor(a2) + 1], units = "secs"))#
	part <- new_duration(a2 %% trunc(a2) * secs, 0)#
	#
	month_seq[a2 + 1] + part#
}
'month<-'(e1,7)
"+.POSIXt" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		second(e1) <- second(e1) + e2$seconds#
		month(e1) <- month(e1) + e2$months#
		#
	} else {#
		base::'+.POSIXt'(e1, e2)#
	}#
}
z + a
z
a
e1 <- z
e2 <- a
inherits(e2, "duration")
"+.POSIXt" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		second(e1) <- second(e1) + e2$seconds#
		month(e1) <- month(e1) + e2$months#
		e1#
		#
	} else {#
		base::'+.POSIXt'(e1, e2)#
	}#
}
z + a
z
z - a
"-.POSIXt" <- function(e1, e2){#
	'+.POSIXt'(e1, -1 * e2)#
}
z - a
-1 * a
b <- c(1,2)
-1 * b
class(b)
-1 * a$seconds
"*.default" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		new_duration(e1 * e2$seconds, e1 * e2$months)#
		#
	} else {#
		base::'*.default'(e1, e2)#
}
"*.default" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		new_duration(e1 * e2$seconds, e1 * e2$months)#
		#
	} else {#
		base::'*.default'(e1, e2)#
	}#
}
fg.
]
"*.default" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		new_duration(e1 * e2$seconds, e1 * e2$months)#
		#
	} else {#
		base::'*.default'(e1, e2)#
	}#
}
-1 * a
traceback()
recover()
*
'*'
"*"
"\*"
\*
'*.default'
'*.default()'
mean
*
?getFunction
getFunction('*')
getFunction('+')
getFunction(mean)
getFunction('mean')
?.Primitive
"*.Default" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		new_duration(e1 * e2$seconds, e1 * e2$months)#
		#
	} else {#
		base::'*.default'(e1, e2)#
	}#
}
-1 * a
e1 <- -1
new_duration(e1 * e2$seconds, e1 * e2$months)
new_duration <- function (seconds, months){#
	structure(data.frame(seconds, months), class = c("duration", "data.frame"))#
}
a <- new_duration(60*60*24+61, 1)
a
class(a)
z + a
? base::math
? base::Math
z + a
traceback()
z + a
recover()
e1 <- z
e2 <- a
inherits(e2, "duration")
second(e1) + e2$seconds
month(e1) + e2$months
second(e1) <- second(e1) + e2$seconds
month(e1) <- month(e1) + e2$months
x <- e1
value <- month(e1) + e2$months
-(month(x) - value)
a2 <- -(month(x) - value)
a2 > 0
month_seq <- seq(x, by = "month", length.out = a2 + 1)
month_seq
difftime(month_seq[ceiling(a2) + 1], #
		month_seq[floor(a2) + 1], units = "secs")
as.double(difftime(month_seq[ceiling(a2) + 1], #
		month_seq[floor(a2) + 1], units = "secs"))
secs <- as.double(difftime(month_seq[ceiling(a2) + 1], #
		month_seq[floor(a2) + 1], units = "secs"))
secs
class(secs)
a2 %% trunc(a2) * secs
part <- a2 %% trunc(a2) * secs
part
class(part)
month_seq[a2 + 1] + part
month_seq[a2 + 1]
class(month_seq[a2 + 1])
month(e1) <- month(e1) + e2$months
'month<-'(e1, month(e1) + e2$months)
?Ops.data.frame
class(a) <- "duration"
z + a
class(a)
a
a <- new_duration(60*60*24+61, 1)
a
e1 <- z
e2 <- a
		second(e1) <- second(e1) + e2$seconds
e1
z
"month<-" <- function (x, value){#
	a2 <- -(month(x) - value)#
	if (a2 == 0){#
		return(x)#
	} else if (a2 > 0){#
		month_seq <- seq(x, by = "month", length.out = a2 + 1)#
	} else { # adding negative months (subtracting)#
		a2 <- abs(a2)#
		month_seq <- seq(x, by = "-1 month", length.out = a2 + 1)#
	}#
	# partial months#
	secs <- as.double(difftime(month_seq[ceiling(a2) + 1], #
		month_seq[floor(a2) + 1], units = "secs"))#
	part <- a2 %% trunc(a2) * secs#
	#
	month_seq[a2 + 1] # + part#
}
z + a
"+.POSIXt" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		second(e1) <- second(e1) + e2$seconds#
		#month(e1) <- month(e1) + e2$months#
		e1#
		#
	} else {#
		base::'+.POSIXt'(e1, e2)#
	}#
}
z + a
"+.POSIXt" <- function(e1, e2){#
	if (inherits(e2, "duration")){#
		#
		#second(e1) <- second(e1) + e2$seconds#
		#month(e1) <- month(e1) + e2$months#
		e1#
		#
	} else {#
		base::'+.POSIXt'(e1, e2)#
	}#
}
z + a
?options
options(error = recover)
z + a
		e1
